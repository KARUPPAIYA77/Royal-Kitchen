/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.91
 * Generated at: 2025-03-07 09:57:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;

public final class orderPlaced_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

    ArrayList<Integer> cart = (ArrayList<Integer>) session.getAttribute("cart");
    if (cart == null) {
        cart = new ArrayList<Integer>();  // Initialize if it doesn't exist
    } else {
        cart.clear();  // Clear only if it exists
    }
    session.setAttribute("cart", cart);

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write(" <link rel=\"icon\" href=\"admin/styles/images/favicon.png\" type=\"image/png\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\">\r\n");
      out.write("<title>Order Placed</title>\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300&display=swap\"\r\n");
      out.write("	rel=\"stylesheet\">\r\n");
      out.write("<style>\r\n");
      out.write("body {\r\n");
      out.write("	background: #e5e5e5;\r\n");
      out.write("	font-family: 'Source Sans Pro', sans-serif;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#card {\r\n");
      out.write("	width: 320px;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.3); /* Added box shadow */\r\n");
      out.write("	border-radius: 8px; /* Rounded corners for a smoother look */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#upper-side {\r\n");
      out.write("	padding: 2em;\r\n");
      out.write("	background-color: #8BC34A;\r\n");
      out.write("	display: block;\r\n");
      out.write("	color: #fff;\r\n");
      out.write("	border-top-right-radius: 8px;\r\n");
      out.write("	border-top-left-radius: 8px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#checkmark {\r\n");
      out.write("	font-size: 4em;\r\n");
      out.write("	margin: 0 auto;\r\n");
      out.write("	color: #fff;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#status {\r\n");
      out.write("	font-weight: lighter;\r\n");
      out.write("	text-transform: uppercase;\r\n");
      out.write("	letter-spacing: 2px;\r\n");
      out.write("	font-size: 1.2em;\r\n");
      out.write("	margin-top: -.2em;\r\n");
      out.write("	margin-bottom: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#lower-side {\r\n");
      out.write("	padding: 2em 2em 5em 2em;\r\n");
      out.write("	background: #fff;\r\n");
      out.write("	display: block;\r\n");
      out.write("	border-bottom-right-radius: 8px;\r\n");
      out.write("	border-bottom-left-radius: 8px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#message {\r\n");
      out.write("	margin-top: -.5em;\r\n");
      out.write("	color: #757575;\r\n");
      out.write("	letter-spacing: 1px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#contBtn {\r\n");
      out.write("	position: relative;\r\n");
      out.write("	top: 1.5em;\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("	background: #8bc34a;\r\n");
      out.write("	color: #fff;\r\n");
      out.write("	margin: auto;\r\n");
      out.write("	padding: .8em 3em;\r\n");
      out.write("	box-shadow: 0px 15px 30px rgba(50, 50, 50, 0.21);\r\n");
      out.write("	border-radius: 25px;\r\n");
      out.write("	transition: all .4s ease;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#contBtn:hover {\r\n");
      out.write("	box-shadow: 0px 15px 30px rgba(50, 50, 50, 0.41);\r\n");
      out.write("	transition: all .4s ease;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("    setTimeout(function() {\r\n");
      out.write("        window.location.href = 'OrderHistory';\r\n");
      out.write("    }, 3000); // Redirect after 3 seconds\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"d-flex justify-content-center align-items-center vh-100\">\r\n");
      out.write("    <div id=\"card\">\r\n");
      out.write("        <div id=\"upper-side\">\r\n");
      out.write("            <div id=\"checkmark\">âœ“</div>\r\n");
      out.write("            <h3 id=\"status\">Success</h3>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div id=\"lower-side\">\r\n");
      out.write("            <p id=\"message\">Your order has been placed successfully!</p>\r\n");
      out.write("            <a href=\"OrderHistory\" id=\"contBtn\">Continue</a>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
